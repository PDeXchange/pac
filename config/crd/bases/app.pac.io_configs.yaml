---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: configs.app.pac.io
spec:
  group: app.pac.io
  names:
    kind: Config
    listKind: ConfigList
    plural: configs
    singular: config
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Config is the Schema for the configs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'ConfigSpec defines the desired state of Config TODO: Add
              appropriate kubebuilder markers for the field'
            properties:
              MIQClientID:
                description: MIQClientID is the client ID created in the keycloak
                  server for talking to ManageIQ
                type: string
              MIQURL:
                description: MIQURL used for talking to Manage IQ
                type: string
              MIQUserName:
                description: MIQUserName is the user name used for talking ManageIQ
                type: string
              credentialSecret:
                description: 'CredentialSecret is the secret contains the credential
                  like MIQ password, ClientSecret Secret contains the following data:
                  miq-password: <ManageIQ Password> miq-client-password: <ManageIQ
                  Client Password>'
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              keycloakRealm:
                description: KeycloakRealm  is the realm used for the manageiq
                type: string
              keycloakURL:
                description: KeycloakURL used for talking to keycloak server
                type: string
              powerVS:
                properties:
                  cloudInstanceID:
                    type: string
                  zone:
                    type: string
                required:
                - cloudInstanceID
                - zone
                type: object
              type:
                type: string
              vpc:
                properties:
                  ID:
                    type: string
                  loadBalancerID:
                    type: string
                  region:
                    type: string
                  zone:
                    description: 'TODO: remove if not required'
                    type: string
                required:
                - ID
                - loadBalancerID
                - region
                - zone
                type: object
            required:
            - MIQClientID
            - MIQURL
            - MIQUserName
            - credentialSecret
            - keycloakRealm
            - keycloakURL
            - powerVS
            - type
            - vpc
            type: object
          status:
            description: ConfigStatus defines the observed state of Config
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
